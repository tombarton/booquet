generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model User {
  email            String    @unique
  firstname        String
  id               Int       @default(autoincrement()) @id
  lastname         String
  password         String
  registeredAt     DateTime  @default(now())
  resetToken       String?   @unique
  resetTokenExpiry DateTime?
  updatedAt        DateTime  @updatedAt
  role             Role
  Cart             Cart
  Order            Order[]
}

enum Role {
  ADMIN
  USER
}

model Product {
  id       String     @id
  name     String
  price    Int
  CartItem CartItem[]
}

model CartItem {
  id        Int     @default(autoincrement()) @id
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int     @default(1)
  cart      Cart    @relation(fields: [cardId], references: [id])
  cardId    Int
}

model Cart {
  id        Int        @default(autoincrement()) @id
  // User is optional as cart can technically belong to a guest.
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime   @default(now())
  CartItem  CartItem[]
}

model OrderItem {
  id       Int    @default(autoincrement()) @id
  title    String
  image    String
  price    Int
  quantity Int
  Order    Order? @relation(fields: [orderId], references: [id])
  orderId  Int?
}

enum OrderStatus {
  PENDING
  AWAITING_CONFIRMATION
  AWAITING_FULFILLMENT
  FULFILLED
}

model Order {
  id        Int         @default(autoincrement()) @id
  items     OrderItem[]
  total     Int
  status    OrderStatus
  chargeId  String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
}
